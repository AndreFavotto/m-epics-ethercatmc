# Convert the soft limits from the hard motor into the 4 soft motors
# We have the 2 hard motors: $(SYSPFX)$(mXp) and $(SYSPFX)$(mXn)
#
# Rule 1: The positive blade is not allowed to go higher than HLM
#  mXp.VAL <= mXp.HLM
#  or
#  mXp.VAL = Center + Gap/2
#  gives
#  Center + Gap/2  <= mXp.HLM
#
#  note:  Gap.RBV = mXp.RBV - mXn.RBV
#  note:  Center.RBV = (mXp.RBV + mXn.RBV) / 2
#
# Rule 2: The negative  blade is not allowed to go lower than LLM
#  mXn.VAL >= mXn.HLM
#  or
#  mXn.VAL = Center - Gap/2
#  gives
#  Center - Gap/2  >= mXp.LLM


# This gives a rule for the Center and the Gap:
# Center.HLM = mXp.HLM - Gap.RBV/2
# Gap.HLM    = mXp.HLM - (Center.RBV/2)
# Gap.HLM    = 
# Center.LLM = mXn.LLM + Gap.RBV/2
# Gap.LLM    = (avoid collision, set to 0.5)
#
#
# 6 inputs:
# (High and low) limit of the 2 hard motors
# Read back position of the hard motors
#
# 4 "straight outputs" "A-D": The hard
# motors (mXp, mXn) go straight into the soft motors (xp xn)
#
# 2 more "straight outputs" "E-F": Avoid a collision and
# feed the readback for one motor into the limit of the other
#
# 4 calculated outputs "I-L"
# High and low for Center and Gap

record(transform, "$(SYSPFX)$(SLIT)tLimits_") {
  field(PHAS, "0")
  field(CLCJ, "MIN(( (b - ((e+f)/2))*2) , ((-c + ((e+f)/2))*2) ) -g -h")
  field(CLCK, "c + ((e-f)/2)+g +h")
  field(CLCL, "b - ((e-f)/2)-g -h")
  field(INPA, "$(SYSPFX)$(mXp)-CfgDLLM-RB  CP NMS")
  field(INPB, "$(SYSPFX)$(mXp)-CfgDHLM-RB  CP NMS")
  field(INPC, "$(SYSPFX)$(mXn)-CfgDLLM-RB  CP NMS")
  field(INPD, "$(SYSPFX)$(mXn)-CfgDHLM-RB  CP NMS")
  field(INPE, "$(SYSPFX)$(mXp).RBV         CP NMS")
  field(INPF, "$(SYSPFX)$(mXn).RBV         CP NMS")
  field(INPG, "$(SYSPFX)$(mXp).RDBD        CP NMS")
  field(INPH, "$(SYSPFX)$(mXn).RDBD        CP NMS")
  field(OUTB, "$(SYSPFX)$(SLIT)xp.HLM      NPP MS")
  field(OUTC, "$(SYSPFX)$(SLIT)xn.LLM      NPP MS")
  field(OUTE, "$(SYSPFX)$(SLIT)xn.HLM      NPP MS")
  field(OUTF, "$(SYSPFX)$(SLIT)xp.LLM      NPP MS")
  field(OUTI, "$(SYSPFX)$(SLIT)Gap.LLM     NPP MS")
  field(OUTJ, "$(SYSPFX)$(SLIT)Gap.HLM     NPP MS")
  field(OUTK, "$(SYSPFX)$(SLIT)Center.LLM  NPP MS")
  field(OUTL, "$(SYSPFX)$(SLIT)Center.HLM  NPP MS")
  field(PREC, "$(PREC=3)")
}

